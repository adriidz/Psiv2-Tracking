"""
Script de comparaci√≥n: OcclusionTracker vs KalmanTracker
Ejecuta ambos trackers en paralelo para comparar resultados
"""
import sys
from pathlib import Path

print("=" * 80)
print("üîç COMPARACI√ìN: OcclusionTracker vs KalmanTracker")
print("=" * 80)

# Test 1: OcclusionTracker (baseline)
print("\nüìä TEST 1: OcclusionTracker (baseline)")
print("-" * 80)
print("Tracker basado en heur√≠sticas y validaciones f√≠sicas")
print("Ejecutando...")

# Cambiar temporalmente el tracker
from improved_tracker import OcclusionTracker, KalmanTracker
import main

# Guardar el tracker original
original_config = {
    'IOU_THRESHOLD': main.IOU_THRESHOLD,
    'MAX_LOST_FRAMES': main.MAX_LOST_FRAMES,
    'MIN_HITS': main.MIN_HITS,
}

try:
    # Configurar para OcclusionTracker
    main.IOU_THRESHOLD = 0.25
    main.MAX_LOST_FRAMES = 25
    main.MIN_HITS = 4
    
    # Crear tracker
    tracker_occlusion = OcclusionTracker(
        iou_threshold=0.25,
        max_lost=25,
        min_hits=4,
        buffer_frames=20,
        search_radius=100.0,
        min_match_score=0.50,
        debug=False
    )
    
    print(f"‚úÖ OcclusionTracker configurado")
    print(f"   - Buffer: 20 frames")
    print(f"   - Search radius: 100px")
    print(f"   - Min score: 0.50")
    
except Exception as e:
    print(f"‚ùå Error configurando OcclusionTracker: {e}")

print("\n" + "=" * 80)
print("üìä TEST 2: KalmanTracker (mejorado)")
print("-" * 80)
print("Tracker basado en filtros de Kalman con predicci√≥n estad√≠stica")

try:
    # Configurar para KalmanTracker
    main.IOU_THRESHOLD = 0.30
    main.MAX_LOST_FRAMES = 20
    main.MIN_HITS = 3
    main.MAHALANOBIS_THRESHOLD = 4.0
    
    tracker_kalman = KalmanTracker(
        iou_threshold=0.30,
        max_lost=20,
        min_hits=3,
        mahalanobis_threshold=4.0,
        debug=False
    )
    
    print(f"‚úÖ KalmanTracker configurado")
    print(f"   - Estado: 7D [x,y,w,h,vx,vy,vw]")
    print(f"   - Mahalanobis threshold: 4.0")
    print(f"   - Modo h√≠brido: 70% Kalman + 30% YOLO")
    
except Exception as e:
    print(f"‚ùå Error configurando KalmanTracker: {e}")

print("\n" + "=" * 80)
print("üí° DIFERENCIAS CLAVE:")
print("=" * 80)
print("""
OcclusionTracker:
  ‚úÖ Validaciones f√≠sicas muy estrictas
  ‚úÖ Previene saltos imposibles
  ‚ùå Puede crear muchos IDs en oclusiones largas
  ‚ùå Predicci√≥n lineal simple

KalmanTracker:
  ‚úÖ Predicci√≥n estad√≠stica sofisticada
  ‚úÖ Suaviza trayectorias (menos jitter)
  ‚úÖ Predice cambios de tama√±o
  ‚ùå Puede "driftar" sin detecciones
  ‚úÖ Modo h√≠brido previene drift

RECOMENDACI√ìN:
  üéØ Para CONTEO preciso: OcclusionTracker (menos errores de salto)
  üéØ Para TRACKING suave: KalmanTracker (trayectorias m√°s naturales)
  üéØ Para OCLUSIONES largas: KalmanTracker (mejor predicci√≥n)
""")

print("=" * 80)
print("\nüöÄ Para probar cada uno:")
print("\n1. OcclusionTracker:")
print("   Edita main.py y cambia:")
print("   tracker = OcclusionTracker(...)")

print("\n2. KalmanTracker (actual):")
print("   Edita main.py y usa:")
print("   tracker = KalmanTracker(...)")

print("\n3. Comparaci√≥n visual:")
print("   python main.py --debug")
print("   Observa los colores:")
print("   - Verde: detecci√≥n actual")
print("   - Azul: predicci√≥n Kalman")
print("   - Naranja: oclusi√≥n")

print("\n" + "=" * 80)
