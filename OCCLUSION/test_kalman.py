"""
Script de prueba r√°pida para el KalmanTracker mejorado
Ejecuta el tracker en tu video con configuraci√≥n optimizada
"""
import sys
from pathlib import Path

# Asegurar que el directorio est√© en el path
sys.path.insert(0, str(Path(__file__).parent))

# Configuraci√≥n para prueba r√°pida
VIDEO_PATH = Path("videos/output3.mp4")
WEIGHTS_PATH = "weights/yolo11s.pt"

# Par√°metros OPTIMIZADOS para Kalman
CONFIDENCE_THRESHOLD = 0.40
IMAGE_SIZE = 960
SKIP_FRAMES = 1  # CR√çTICO: procesar todos los frames

# Par√°metros del KalmanTracker (OPTIMIZADOS)
IOU_THRESHOLD = 0.25
MAX_LOST_FRAMES = 15
MIN_HITS = 3
MAHALANOBIS_THRESHOLD = 3.5

# Visualizaci√≥n
SHOW_DISPLAY = True
DEBUG_MODE = False

if __name__ == "__main__":
    print("=" * 80)
    print("üöÄ PRUEBA DE KALMAN TRACKER MEJORADO")
    print("=" * 80)
    print(f"üìπ Video: {VIDEO_PATH}")
    print(f"ü§ñ Modelo: {WEIGHTS_PATH}")
    print(f"üéØ Confianza: {CONFIDENCE_THRESHOLD}")
    print(f"üìè Imagen: {IMAGE_SIZE}px")
    print(f"‚è≠Ô∏è  Skip frames: {SKIP_FRAMES}")
    print("-" * 80)
    print(f"üîµ Tracker: KalmanTracker (MEJORADO)")
    print(f"   ‚Ä¢ IoU threshold: {IOU_THRESHOLD}")
    print(f"   ‚Ä¢ Max lost: {MAX_LOST_FRAMES} frames")
    print(f"   ‚Ä¢ Min hits: {MIN_HITS}")
    print(f"   ‚Ä¢ Mahalanobis: {MAHALANOBIS_THRESHOLD}")
    print("-" * 80)
    print(f"üí° Mejoras implementadas:")
    print(f"   ‚úÖ Estado 7D: [x, y, w, h, vx, vy, vw]")
    print(f"   ‚úÖ Predicci√≥n de tama√±o adaptativo")
    print(f"   ‚úÖ Actualizaci√≥n completa [x,y,w,h]")
    print(f"   ‚úÖ Bbox suavizado con Kalman")
    print(f"   ‚úÖ Distancia Mahalanobis 4D")
    print(f"   ‚úÖ Manejo robusto de errores")
    print("-" * 80)
    print(f"üé® Colores de visualizaci√≥n:")
    print(f"   üü¢ Verde: Track activo (con detecci√≥n)")
    print(f"   üîµ Azul claro: Predicci√≥n Kalman (debug)")
    print(f"   üî¥ Naranja: Track en oclusi√≥n (solo predicci√≥n)")
    print("-" * 80)
    print(f"‚ÑπÔ∏è  Presiona 'Q' o 'ESC' para detener")
    print("=" * 80)
    print()
    
    # Importar y ejecutar main
    from main import main
    
    try:
        main()
    except KeyboardInterrupt:
        print("\n‚ö†Ô∏è Interrumpido por usuario")
    except Exception as e:
        print(f"\n‚ùå Error: {e}")
        import traceback
        traceback.print_exc()
